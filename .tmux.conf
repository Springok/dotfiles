#####################
# General
#####################
# `man tmux` could help

set -g prefix `
# set -g prefix2 C-,
bind "'" send-prefix
set -g base-index 1

# Easy config reload
bind-key R source-file ~/.tmux.conf \; display-message "tmux.conf reloaded."

# vi is good
setw -g mode-keys vi

set-option -g default-terminal screen-256color

bind-key : command-prompt

bind-key + select-layout main-horizontal
bind-key = select-layout main-vertical
set-window-option -g other-pane-height 25
set-window-option -g other-pane-width 80
set-window-option -g display-panes-time 1500

# Set window notifications
setw -g monitor-activity on
set -g visual-activity on

# Enable native Mac OS X copy/paste
set-option -g default-command "/bin/bash -c 'which reattach-to-user-namespace >/dev/null && exec reattach-to-user-namespace $SHELL -l || exec $SHELL -l'"

# Allow the arrow key to be used immediately after changing windows
set-option -g repeat-time 0

#####################
# Navigation
#####################
bind-key q display-panes
bind-key c new-window
bind-key space next-window
bind-key bspace previous-window
bind-key enter next-layout

bind - split-window -v -c "#{pane_current_path}"
bind \ split-window -h -c "#{pane_current_path}"
bind c new-window -a -c "#{pane_current_path}"

bind m resize-pane -Z
bind l last-pane
bind h previous-window

bind ! break-pane -d

bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

set-option -g repeat-time 500

# Number windows starting at 1, renumber as windows are added / removed
set-option -g base-index 1
set-option -g renumber-windows on

# hit space to open the tree
bind C-j choose-tree

bind-key C-o rotate-window

# enable smart pane switching with awareness of vim splits
# need vim plugin vim-tmux-navigator
# is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
#   | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
# bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
# bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
# bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
# bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
# bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
# uncomment below stanza to enable smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-j) || tmux select-pane -D"
# bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-l) || tmux select-pane -R"
# bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys 'C-\\') || tmux select-pane -l"
bind C-l send-keys 'C-l'

#####################
# Copy Mode
#####################
bind PageUp copy-mode -u
bind PageDown copy-mode

bind v copy-mode
bind p paste-buffer -p

bind-key -T copy-mode-vi v send-keys -X begin-selection ; \
bind -T copy-mode-vi y send -X copy-selection

unbind -T copy-mode-vi Enter ; \
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"; \

#####################
# Status Bar
#####################
set-option -g status-bg default
set-option -g status-fg default
set-option -g pane-active-border-fg default
set-option -g pane-border-fg default

set-option -g status-keys "emacs"

set-option -g status-left '[#S]'
set-option -g status-right "#(date '+%a, %b %d - %I:%M')"

set-option -g status-interval 1
set-window-option -g window-status-current-fg magenta

# Prompted join-pane
bind-key j command-prompt -p "join pane from: "  "join-pane -h -s '%%'"

# Easily swap a pane (targeted by pane number) with the current pane
bind-key s display-panes\; command-prompt -p "pane #: "  "swap-pane -t '%%'"

# vim: filetype=conf
