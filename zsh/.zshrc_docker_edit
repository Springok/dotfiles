########################
# Project Related
########################
export DISABLE_SPRING=1

# Nerv Projects
alias ck='j /proj/nerv_ck'
alias hk='j /proj/nerv_hk'
alias sg='j /proj/nerv_sg'
alias amoeba='j /proj/amoeba'
alias angel='j /proj/angel'
alias adam='j clojure/projects/adam'
alias asuka='j clojure/projects/asuka'

if [[ -d /project/vm ]]; then
  alias e_db='vim /project/vm/user/db_mapping.yml'

  alias db_dump='j ~;/current/edit/scripts/dump_db.sh'
  alias ch_pw='be rails runner /project/vm/scripts/nerv/change_passwords.rb'
  alias e_pw='vim /project/vm/scripts/nerv/change_passwords.rb'
fi

if [[ -d ~/proj/wscripts ]]; then
  alias e_db='vim ~/proj/wscripts/db/db_mapping.yml'
  alias ch_pw='be rails runner ~/proj/wscripts/db/ch_pw.rb'
  alias e_pw='vim ~/proj/wscripts/db/ch_pw.rb'
fi


########################
# Jump Into Config File
########################
alias dot='j ~/.dotfiles_core'
alias zshrc='e ~/.dotfiles_core/zsh/.zshrc'
alias sozsh='exec zsh'
alias vimrc='e ~/.dotfiles_core/nvim/.config/nvim/init.lua'
alias en='e .env'

# extra PG env for accessing psql easier in e2 container
export PGUSER=psql
export PGHOST=localhost

# extra alias purely personal preferance
alias cn='cat /dev/null >!'
alias cl='cn log/development.log; cn log/lograge_development.log; cn log/puma.log;'
alias v='nvim'
alias vi='nvim'

# for echo highlight color
err='\\033[0;31m'
hl='\\033[0;32m'
nc='\\033[0m'

# shortcut on pointing diff compose file and using lazydocker
ld() {
  case "\${1:-not_specify}" in
    not_specify)
      lazydocker
      ;;
    hq)
      lazydocker -f "/current/hq/compose.yml"
      ;;
    hk|ck|sg|ave_ck)
      lazydocker -f "/current/sites/nerv_by_site_code/\$1/compose.yml"
      ;;
    *)
      if [[ -f "/current/sites/\$1/compose.yml" ]]; then
        lazydocker -f "/current/sites/\$1/compose.yml"
      else
       echo "docker compose file not exist, please try again!"
      fi
      ;;
  esac
}

# shortcut to swap different cache folder for jumping between nerv/amoeba/angel development
sc() {
  # default if /cache is real folder or softlink, if /cache is real folder, should exit now
  # or it may be accidentally clear
  if [ -e /cache ] && [ ! -L /cache ]; then
    echo -e "\${err}Error: /cache folder is not a softlink, this script may not working on this condition, now exit!\${nc}"
    # exit 1
  else
    [ -L /cache ] && rm /cache;
    case "\${1:-default}" in
      default)
        echo -e "\${hl}swap to use 'default' cache folder\${nc}"
        ln -s /cache-default /cache
        [ -n "\$TMUX" ] && tmux set-option -g @cache-name 'cache-default'
        ;;
      amoeba)
        echo "\${hl}swap to use 'amoeba' cache folder\${nc}"
        ln -s /cache-amoeba /cache
        [ -n "\$TMUX" ] && tmux set-option -g @cache-name 'cache-amoeba'
        ;;
      angel)
        echo "\${hl}swap to use 'angel' cache folder\${nc}"
        ln -s /cache-angel /cache
        [ -n "\$TMUX" ] && tmux set-option -g @cache-name 'cache-angel'
        ;;
      *)
        # echo "\${err}Error: cache '\$1' not exists, please try again!\${nc}"
        ;;
    esac
  fi
}

# init softlink if not exists
[ ! -e /cache ] && sc

# vim: ft=zsh
